<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="collapseButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB0AAAAECAYAAABySjRcAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAABJJREFUKFNj+D8AYNRSGoL//wGSbs5Ay1gRvgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="closeButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABkAAAAZCAYAAADE6YVjAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAQlJREFUSEu9louNwjAQBVMKpdA5pVBK8MAseZIxCQkwUnC8+z6600ncBPM8n9pz
        4bwPDtLlObi2BzgPFeE3Bx557YPGZHcRPv3JZbT4uAi9vmTJ4cVBsrkInfqk9zNwkawWsVeXjH0sFCRD
        A3P3ybigQKAw6YzcnSfrBQVCDckzgNN7sr2gwKAx4X72TD4vKDAa8I79BQUBBr3ieEHRgvgVveKs5Bgt
        6Lc/CQEGvWN/EUYDEu7f+evCoDF5BnF6T7YXIdSQdAHcnSfrRQgUJkMjc/fJuIiFgmRsEPbqkt7HwEWy
        WlCgU58sfl4cJJsLCvT6kkdO+/j7d/zuggK/ObDk8dKeH/3fNU03kglLbZ6ZsxgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="searchButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAdRJREFUWEftVtttwzAM9AgdoSP0J0Ds/HiEbtBs0GyQjJAN3A3SDTqCR/AIGSG9
        S0+GRCjRo0bRjxxAJJDI44mUZDX3sFqtXrqu27dt+4XfM+wimzS2Xa/Xz3JfDiRVApcwZcNiQpD4HYT+
        anNtgoheNHUAyd6QOqOgETZA4En/Y36XzWbzJroyIDiWnL3e9X3/JLcZLDnmD/Tx/K/GvSO3PIgsIEHi
        j1hiC8VaEVNO7AwEDIbgqKksMBlirIiDpu8jsvoy9UKE56yp+4Aj++gHbjVVDLbN54Ko9KlAUHDeNVwF
        JvS5YOlWwmk+8xSj4Wo4LvF9avg2igMSAM+8GbMW5Jxlg4arAY5iAf7xGTVcBR1Hx5XdAl6tc1DNEXRA
        wlefC5a+CxC0Kw66AcQGi8k6hiqb//U781LRdDYQs/U4aJOm0oDz0QSPJa2gYMTYqzj/QlMVLAG/78lK
        sMzwDd4PWbvfQkS+AGd87QS9pGCOMVHEv/xz7ABS20drrJKtVMyuD5gqIXqI5iQJjNVQbLChq6uB4Ohr
        J2J8ns0bDv9tTL0IQnvjiBWeuEr1nW/Dnd0bRKQKvxdRiocIh4cIh38rgidK038DI6Log7cYKIIr/0ne
        NN9Yog0YIdA2yQAAAABJRU5ErkJggg==
</value>
  </data>
</root>